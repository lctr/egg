/* BASICS */

.CodeMirror {
	/* Set height, width, borders, and global font properties here */
	font-family: Menlo, Monaco, 'Courier New', monospace;
	height: 100%;
	max-width: 100%;
	color: #f2f2f2;
	direction: ltr;
}

/* PADDING */

.CodeMirror-lines {
	padding: 4px 0; /* Vertical padding around content */
}
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
	padding: 0 4px; /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
	background-color: transparent; /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
	/* border-right: 1px solid #ddd; */
	padding-right: 2px;
	background-color: transparent;
	white-space: nowrap;
}
.CodeMirror-linenumbers {
}
.CodeMirror-linenumber {
	padding: 0 15px 0 0;
	min-width: 20px;
	text-align: right;
	white-space: nowrap;
}

.CodeMirror-guttermarker {
	color: black;
}
.CodeMirror-guttermarker-subtle {
	color: #999;
}

/* CURSOR */

.CodeMirror-cursor {
	border-left: 1px solid #fff;
	border-right: none;
	width: 0;
}
/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
	border-left: 1px solid silver;
}
.cm-fat-cursor .CodeMirror-cursor {
	width: auto;
	border: 0 !important;
	background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
	z-index: 1;
}
.cm-fat-cursor-mark {
	background-color: rgba(20, 255, 20, 0.5);
	-webkit-animation: blink 1.06s steps(1) infinite;
	-moz-animation: blink 1.06s steps(1) infinite;
	animation: blink 1.06s steps(1) infinite;
}
.cm-animate-fat-cursor {
	width: auto;
	border: 0;
	-webkit-animation: blink 1.06s steps(1) infinite;
	-moz-animation: blink 1.06s steps(1) infinite;
	animation: blink 1.06s steps(1) infinite;
	background-color: #7e7;
}
@-moz-keyframes blink {
	0% {
	}
	50% {
		background-color: transparent;
	}
	100% {
	}
}
@-webkit-keyframes blink {
	0% {
	}
	50% {
		background-color: transparent;
	}
	100% {
	}
}
@keyframes blink {
	0% {
	}
	50% {
		background-color: transparent;
	}
	100% {
	}
}

/* Can style cursor different in overwrite (non-insert) mode */
.CodeMirror-overwrite .CodeMirror-cursor {
}

.cm-tab {
	display: inline-block;
	text-decoration: inherit;
}

.CodeMirror-rulers {
	position: absolute;
	left: 0;
	right: 0;
	top: -50px;
	bottom: 0;
	overflow: hidden;
}
.CodeMirror-ruler {
	border-left: 1px solid #ccc;
	top: 0;
	bottom: 0;
	position: absolute;
}

/* ONE egg DARK THEME */

.cm-s-egg.CodeMirror {
	background: transparent;
	color: #f2f2f2;
}
.cm-s-egg div.CodeMirror-selected {
	background: #5188ff4f;
}
.cm-s-egg .CodeMirror-line::selection,
.cm-s-egg .CodeMirror-line > span::selection,
.cm-s-egg .CodeMirror-line > span > span::selection {
	background: rgba(73, 72, 62, .99);
}
.cm-s-egg .CodeMirror-line::-moz-selection,
.cm-s-egg .CodeMirror-line > span::-moz-selection,
.cm-s-egg .CodeMirror-line > span > span::-moz-selection {
	background: rgba(116, 126, 121, 0.99);
}
.cm-s-egg .CodeMirror-gutters {
	background: transparent;
	border-right: 0px;
}
.cm-s-egg .CodeMirror-guttermarker {
	color: white;
}
.cm-s-egg .CodeMirror-guttermarker-subtle {
	color: #d0d0d0;
}
.cm-s-egg .CodeMirror-linenumber {
	color: #7d8286;
}
.cm-s-egg .CodeMirror-cursor {
	border-left: 1px solid #f8f8f0;
}

.cm-s-egg span.cm-comment {
	color: #6f7886;
}
.cm-s-egg span.cm-atom {
	color: #abb2bf;
}
.cm-s-egg span.cm-number {
	color: #c678dd;
}

.cm-s-egg span.cm-comment.cm-attribute {
	color: #97b757;
}
.cm-s-egg span.cm-comment.cm-def {
	color: #bc9262;
}
.cm-s-egg span.cm-comment.cm-tag {
	color: #bc6283;
}
.cm-s-egg span.cm-comment.cm-type {
	color: #5998a6;
}

.cm-s-egg span.cm-property,
.cm-s-egg span.cm-attribute {
	color: #a6e22e;
}
.cm-s-egg span.cm-keyword {
	color: #e06c75;
}
.cm-s-egg span.cm-builtin {
	color: #56b6c2;
}
.cm-s-egg span.cm-string {
	color: #e5c07b;
}

.cm-s-egg span.cm-variable {
	color: #e9e9d3;
}
.cm-s-egg span.cm-variable-2 {
	color: #61afef;
}
.cm-s-egg span.cm-variable-3,
.cm-s-egg span.cm-type {
	color: #56b6c2;
}
.cm-s-egg span.cm-def {
	color: #d19a66;
}
.cm-s-egg span.cm-bracket {
	color: #f8f8f2;
}
.cm-s-egg span.cm-tag {
	color: #e06c75;
}
.cm-s-egg span.cm-header {
	color: #ae81ff;
}
.cm-s-egg span.cm-link {
	color: #61afef;
}
.cm-s-egg span.cm-error {
	background: #f92672;
	color: #f8f8f0;
}

.cm-s-egg .CodeMirror-activeline-background {
	background: rgba(150, 150, 150, 0.4) !important;
}
.cm-s-egg .CodeMirror-matchingbracket {
	text-decoration: underline;
	color: white !important;
}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

.CodeMirror {
	position: relative;
	overflow: hidden;
	background: transparent;
	/* height: auto; */
}

.CodeMirror-scroll {
	overflow: scroll !important; /* Things will break if this is overridden */
	/* 50px is the magic margin used to hide the element's real scrollbars */
	/* See overflow: hidden in .CodeMirror */
	margin-bottom: -50px;
	margin-right: -50px;
	padding-bottom: 50px;
	height: 100%;
	outline: none; /* Prevent dragging from highlighting the element */
	position: relative;
}
.CodeMirror-sizer {
	position: relative;
	border-right: 50px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
	position: absolute;
	z-index: 6;
	display: none;
	outline: none;
}
.CodeMirror-vscrollbar {
	right: 0;
	top: 0;
	overflow-x: hidden;
	overflow-y: scroll;
}
.CodeMirror-hscrollbar {
	bottom: 0;
	left: 0;
	overflow-y: hidden;
	overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
	right: 0;
	bottom: 0;
}
.CodeMirror-gutter-filler {
	left: 0;
	bottom: 0;
}

.CodeMirror-gutters {
	position: absolute;
	left: 0;
	top: 0;
	min-height: 100%;
	z-index: 3;
}
.CodeMirror-gutter {
	white-space: normal;
	height: 100%;
	display: inline-block;
	vertical-align: top;
	margin-bottom: -50px;
}
.CodeMirror-gutter-wrapper {
	position: absolute;
	z-index: 4;
	background: none !important;
	border: none !important;
}
.CodeMirror-gutter-background {
	position: absolute;
	top: 0;
	bottom: 0;
	z-index: 4;
}
.CodeMirror-gutter-elt {
	position: absolute;
	cursor: default;
	z-index: 4;
}
.CodeMirror-gutter-wrapper ::selection {
	background-color: transparent;
}
.CodeMirror-gutter-wrapper ::-moz-selection {
	background-color: transparent;
}

.CodeMirror-lines {
	cursor: text;
	min-height: 1px; /* prevents collapsing before first draw */
}
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
	/* Reset some styles that the rest of the page might have set */
	-moz-border-radius: 0;
	-webkit-border-radius: 0;
	border-radius: 0;
	border-width: 0;
	background: transparent;
	font-family: inherit;
	font-size: inherit;
	margin: 0;
	white-space: pre;
	word-wrap: normal;
	line-height: inherit;
	color: inherit;
	z-index: 2;
	position: relative;
	overflow: visible;
	-webkit-tap-highlight-color: transparent;
	-webkit-font-variant-ligatures: contextual;
	font-variant-ligatures: contextual;
}
.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
	word-wrap: break-word;
	white-space: pre-wrap;
	word-break: normal;
}

.CodeMirror-linebackground {
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	z-index: 0;
}

.CodeMirror-linewidget {
	position: relative;
	z-index: 2;
	padding: 0.1px; /* Force widget margins to stay inside of the container */
}

.CodeMirror-widget {
}

.CodeMirror-rtl pre {
	direction: rtl;
}

.CodeMirror-code {
	outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
	-moz-box-sizing: content-box;
	box-sizing: content-box;
}

.CodeMirror-measure {
	position: absolute;
	width: 100%;
	height: 0;
	overflow: hidden;
	visibility: hidden;
}

.CodeMirror-cursor {
	position: absolute;
	pointer-events: none;
}
.CodeMirror-measure pre {
	position: static;
}

div.CodeMirror-cursors {
	visibility: hidden;
	position: relative;
	z-index: 3;
}
div.CodeMirror-dragcursors {
	visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
	visibility: visible;
}

.CodeMirror-selected {
	background: #d9d9d9;
}
.CodeMirror-focused .CodeMirror-selected {
	background: #d7d4f0;
}
.CodeMirror-crosshair {
	cursor: crosshair;
}
.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
	background: #d7d4f0;
}
.CodeMirror-line::-moz-selection,
.CodeMirror-line > span::-moz-selection,
.CodeMirror-line > span > span::-moz-selection {
	background: #d7d4f0;
}

.cm-searching {
	background-color: #ffa;
	background-color: rgba(255, 255, 0, .4);
}

/* Used to force a border model for a node */
.cm-force-border {
	padding-right: .1px;
}

@media print {
	/* Hide the cursor when printing */
	.CodeMirror div.CodeMirror-cursors {
		visibility: hidden;
	}
}

/* See issue #2901 */
.cm-tab-wrap-hack:after {
	content: '';
}

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
	background: none;
}
